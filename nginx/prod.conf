## Version 2019/08/01 - Changelog: https://github.com/linuxserver/docker-letsencrypt/commits/master/root/defaults/default
# Cache zone
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

# redirect all traffic to https
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
}

# main server block
server {
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;

	# all ssl related config moved to ssl.conf
	include /config/nginx/ssl.conf;

	# Enable Gzip compressed.
	gzip on;
	gzip_http_version  1.0;
	gzip_comp_level    5;
	gzip_min_length    256;
	gzip_proxied       any;
	gzip_vary          on;

	# Compress all output labeled with one of the following MIME-types.
	gzip_types
		application/atom+xml
		application/javascript
		application/json
		application/rss+xml
		application/vnd.ms-fontobject
		application/x-font-ttf
		application/x-web-app-manifest+json
		application/xhtml+xml
		application/xml
		font/opentype
		image/svg+xml
		image/x-icon
		text/css
		text/plain
		text/x-component;

	client_max_body_size 0;

	location / {
		 proxy_pass        http://localhost:3000;
		 proxy_redirect    default;
		 proxy_set_header  Upgrade $http_upgrade;
		 proxy_set_header  Connection "upgrade";
		 proxy_set_header  Host $host;
		 proxy_set_header  X-Real-IP $remote_addr;
		 proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
		 proxy_set_header  X-Forwarded-Host $server_name;
		 proxy_set_header  X-Forwarded-Proto $scheme;

		 add_header Cache-Control "no-cache, no-store, must-revalidate" always;
	}

	location /api {
		proxy_pass        http://api:5000;
		proxy_redirect    default;
		proxy_set_header  Upgrade $http_upgrade;
		proxy_set_header  Connection "upgrade";
		proxy_set_header  Host $host;
		proxy_set_header  X-Real-IP $remote_addr;
		proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header  X-Forwarded-Host $server_name;
		proxy_set_header  X-Forwarded-Proto $scheme;
	}
}
