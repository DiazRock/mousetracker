## Version 2019/08/01 - Changelog: https://github.com/linuxserver/docker-letsencrypt/commits/master/root/defaults/default
# Cache zone
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream nextjs {
  server client:3000;
}

# redirect all traffic to https
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
}


# main server block
server {
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;

	# all ssl related config moved to ssl.conf
	include /config/nginx/ssl.conf;

	# Enable Gzip compressed.
	gzip on;

	# Enable compression both for HTTP/1.0 and HTTP/1.1 (required for CloudFront).
	gzip_http_version  1.0;

	# Compression level (1-9).
	# 5 is a perfect compromise between size and cpu usage, offering about
	# 75% reduction for most ascii files (almost identical to level 9).
	gzip_comp_level    5;

	# Don't compress anything that's already small and unlikely to shrink much
	# if at all (the default is 20 bytes, which is bad as that usually leads to
			# larger files after gzipping).
	gzip_min_length    256;

	# Compress data even for clients that are connecting to us via proxies,
	# identified by the "Via" header (required for CloudFront).
	gzip_proxied       any;

	# Tell proxies to cache both the gzipped and regular version of a resource
	# whenever the client's Accept-Encoding capabilities header varies;
	# Avoids the issue where a non-gzip capable client (which is extremely rare
			# today) would display gibberish if their proxy gave them the gzipped version.
	gzip_vary          on;

	# Compress all output labeled with one of the following MIME-types.
	gzip_types
		application/atom+xml
		application/javascript
		application/json
		application/rss+xml
		application/vnd.ms-fontobject
		application/x-font-ttf
		application/x-web-app-manifest+json
		application/xhtml+xml
		application/xml
		font/opentype
		image/svg+xml
		image/x-icon
		text/css
		text/plain
		text/x-component;

	client_max_body_size 0;

	location ~* ^\/_next\/.*\/app.js$ {
		proxy_pass  http://nextjs;
		sendfile   on;
		tcp_nopush on;
		default_type application/javascript;
		add_header Cache-Control "public, max-age=31536000, immutable" always;
	}

	location ~* ^\/_next\/.*\/page\/(?<page_name>[^\/\n?]*).*$ {
		proxy_pass  http://nextjs;
		sendfile   on;
		tcp_nopush on;
		default_type application/javascript;

		if ($page_name = '') {
			set $page_name index;
		}
		rewrite ^ /build/.next/bundles/pages/$page_name.js break;
		add_header Cache-Control "public, max-age=31536000, immutable" always;
	}

	location ~* ^\/_next\/.*\/webpack\/chunks\/(?<chunk_name>[^\/\n?]*).*$ {
		proxy_pass  http://nextjs;
		sendfile   on;
		tcp_nopush on;
		default_type application/javascript;
		rewrite ^ /build/.next/chunks/$chunk_name break;
		add_header Cache-Control "public, max-age=31536000, immutable" always;
	}

	location /static {
		proxy_pass  http://nextjs;
		add_header Cache-Control "public, max-age=86400" always;
	}


	location / {
		 proxy_pass        http://nextjs;
		 proxy_redirect    default;
		 proxy_set_header  Upgrade $http_upgrade;
		 proxy_set_header  Connection "upgrade";
		 proxy_set_header  Host $host;
		 proxy_set_header  X-Real-IP $remote_addr;
		 proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
		 proxy_set_header  X-Forwarded-Host $server_name;
		 proxy_set_header  X-Forwarded-Proto $scheme;

		 add_header Cache-Control "no-cache, no-store, must-revalidate" always;
	}

	location /api {
		proxy_pass        http://api:5000;
		proxy_redirect    default;
		proxy_set_header  Upgrade $http_upgrade;
		proxy_set_header  Connection "upgrade";
		proxy_set_header  Host $host;
		proxy_set_header  X-Real-IP $remote_addr;
		proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header  X-Forwarded-Host $server_name;
		proxy_set_header  X-Forwarded-Proto $scheme;
	}
}
